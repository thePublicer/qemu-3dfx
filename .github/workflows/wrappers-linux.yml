name: wrappers-linux

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Install requiremnts
      run: sudo apt-get install -y --fix-missing gcc-mingw-w64 mingw-w64-tools curl git build-essential bison flex texinfo patch zlib1g-dev tar bzip2 gzip xz-utils unzip python2-dev m4 dos2unix nasm diffutils  automake autoconf xxd
    - name: env watcom
      run: WATCOM=/opt/openwatcom
    - name: download OpenWatcom
      run: curl -OL https://github.com/open-watcom/open-watcom-v2/releases/download/2024-05-02-Build/open-watcom-2_0-c-linux-x64
    - name: chmod OpenWatcom
      run: chmod +x open-watcom-2_0-c-linux-x64
    - name: temp OpenWatcom
      run: TERM=linux script -qefc "./open-watcom-2_0-c-linux-x64 -is"
    - name: remove download OpenWatcom
      run: rm open-watcom-2_0-c-linux-x64
    - name: git clone djgpp GCC
      run: git clone https://github.com/jwt27/build-gcc.git
    - name: checkout djgpp GCC
      working-directory: ./build-gcc
      run: git checkout e7135d2
    - name: sed djgpp GCC
      working-directory: ./build-gcc
      run: sed -i '/build-gdb.sh/d' build-djgpp.sh 
    - name: build djgpp GCC
      working-directory: ./build-gcc
      run: sudo ./build-djgpp.sh --target=i686-pc-msdosdjgpp --prefix=/usr/local --batch all
    - name: remove build-gcc
      run: rm -rf build-gcc
    - name: configure
      working-directory: Setup Path
      run:  export PATH=/usr/i686-w64-mingw32/bin/:/usr/local/i686-pc-msdosdjgpp/bin/:/opt/openwatcom/binl64:$PATH
    - name: make 3dfx build folder
      working-directory: ./wrappers/3dfx
      run: mkdir build
    - name: run config wrapper
      working-directory: ./wrappers/3dfx/build
      run: bash ../../../scripts/conf_wrapper
    - name: Make
      working-directory: ./wrappers/3dfx/build
      run: make && make clean
    - name: Make clean
      working-directory: ./wrappers/3dfx/build
      run: make clean
    - name: make mesa build folder
      working-directory: ./wrappers/mesa
      run: mkdir build
    - name: run config wrapper
      working-directory: ./wrappers/mesa/build
      run: bash ../../../scripts/conf_wrapper
    - name: Make
      working-directory: ./wrappers/mesa/build
      run: make && make clean
    - name: Make clean
      working-directory: ./wrappers/mesa/build
      run: make clean
    - uses: actions/upload-artifact@v4
      with:
       name: wrappers-mesa
       path: ./wrappers/mesa/build
    - uses: actions/upload-artifact@v4
      with:
       name: wrappers-3dfx
       path: ./wrappers/3dfx/build